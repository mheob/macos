# ZSH
#alias zshaliases='vim ~/.zsh_aliases'
#alias zshconfig='vim ~/.zshrc'
#alias zshrestart='source ~/.zshrc'

# General
#alias c='clear'
#alias l='eza --icons'
#alias ls='eza --icons'
#alias la='eza --all --icons'
#alias ll='eza --long --icons'
#alias lla='eza --all --long --icons'
#alias lsr='eza --recurse --icons'
#alias tree='eza --tree --icons'
#alias trm='trash'

# Brew
#alias bi='brew install'
#alias bic='brew install --cask'
#alias binfo="brew info"
#alias bl='brew list; echo'
#alias bs='brew search'
#alias bu='brew uninstall --zap'
#alias cleanup='brew autoremove && brew cleanup -s --prune=7'
#alias update='brew update && brew upgrade && brew cu --all --yes --cleanup'

# Code
#alias code='cursor'

# Xcode
#alias xcode-reinstall='sudo rm -rf /Library/Developer/CommandLineTools && xcode-select --install'

# Topgrade
#alias tg='topgrade'

# Neovim
alias vim='nvim'

# Git
alias gmc='gitmoji -c'
#alias gcz='npx cz'
alias gstau='git stash push -u'
alias ggpf='git push origin $(current_branch) --force-with-lease --force-if-includes'
unalias gk

# Netlify
alias ntl='netlify'

# Taze
#alias nup='nlx taze -I'

# PNPM
alias pn='pnpm'
alias pna='pnpm add'
alias pnad='pnpm add -D'
alias pnaf='pnpm add --filter '
alias pnadf='pnpm add -D --filter '
alias pnaw='pnpm add -w'
alias pnadw='pnpm add -Dw'
alias pni='pnpm install'
alias pnun='pnpm un'
alias pno='pnpm outdated'
alias pnup='pnpm update'
alias pnupi='pnpm update -i'
alias pnupil='pnpm update -iL'
alias pne='pnpm exec'
alias pnd='pnpm dlx'
alias pnr='pnpm run'
alias pnrb='pnpm run build'
alias pnrcs='pnpm run changeset'
alias pnrf='pnpm run format'
alias pnrl='pnpm run lint'
alias pnrd='pnpm run dev'
alias pnrs='pnpm run start'
alias pnrt='pnpm run test'

# Golang
alias cobra='cobra-cli'

# Infocmp
alias infocmp='/opt/homebrew/opt/ncurses/bin/infocmp'

# Flush Directory Service cache
#alias flush='dscacheutil -flushcache && killall -HUP mDNSResponder'

# Always enable colored `grep` output
#alias grep='grep --color=auto'
#alias fgrep='fgrep --color=auto'
#alias egrep='egrep --color=auto'

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# Ghostty config
#alias ghconf='vim ~/.config/ghostty/config'

# Use package manager from its lockfile
p() {
  if [[ -f bun.lockb ]]; then
    command bun "$@"
  elif [[ -f pnpm-lock.yaml ]]; then
    command pnpm "$@"
  elif [[ -f yarn.lock ]]; then
    command yarn "$@"
  elif [[ -f package-lock.json ]]; then
    command npm "$@"
  else
    command pnpm "$@"
  fi
}

# Create a new directory and enter it
function mkd() {
  mkdir -p "$@" && cd "$_"
}

# Create files in subfolders
function touchp() {
  mkdir -p "$(dirname "$1")/" && touch "$1"
}

# Determine size of a file or total size of a directory
function fs() {
  if du -b /dev/null >/dev/null 2>&1; then
    local arg=-sbh
  else
    local arg=-sh
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@"
  else
    du $arg .[^.]* ./*
  fi
}

# Use Git’s colored diff when available
hash git &>/dev/null
if [ $? -eq 0 ]; then
  function diff() {
    git diff --no-index --color-words "$@"
  }
fi

# Git - Delete all branches merged into main
dam() {
  echo "Deleting all merged branches ..."
  git checkout main && git branch --merged | egrep -v "(^\*|main)" | xargs git branch -d
  echo "☑️ Done!"
}

# `o` with no arguments opens the current directory, otherwise opens the given
# location
function o() {
  if [ $# -eq 0 ]; then
    open .
  else
    open "$@"
  fi
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
  tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX
}
